IF EXISTS(SELECT TOP 1 1 FROM SYS.PROCEDURES WHERE NAME='SP_INSERTORUPDATESTUDENT' AND TYPE='P')
DROP PROCEDURE SP_INSERTORUPDATESTUDENT
GO 
CREATE PROC SP_INSERTORUPDATESTUDENT
(
	@STUDENTID BIGINT,
	@NAME NVARCHAR(MAX),
	@DATEOFBIRTH DATE,
	@UNIVERSITYCOURSE NVARCHAR(MAX),
	@STARTDATE DATE,
	@ENDDATE DATE,
    @WELSHLANGUAGEPROFICIENCY INT
)

AS  
IF @STUDENTID = 0
    BEGIN
        SELECT @STUDENTID = ISNULL(MAX(STUDENTID), 0) + 1 FROM TSTUDENTS
    END
IF NOT EXISTS (SELECT * FROM  TSTUDENTS WHERE STUDENTID = @STUDENTID)  
BEGIN  
 INSERT INTO TSTUDENTS(STUDENTID,NAME,DATEOFBIRTH,UNIVERSITYCOURSE,STARTDATE,ENDDATE,WELSHLANGUAGEPROFICIENCY)  
 VALUES(@STUDENTID,@NAME,@DATEOFBIRTH,@UNIVERSITYCOURSE,@STARTDATE,@ENDDATE,@WELSHLANGUAGEPROFICIENCY)  
END  
ELSE  
BEGIN  
 UPDATE TSTUDENTS SET NAME=@NAME,WELSHLANGUAGEPROFICIENCY=@WELSHLANGUAGEPROFICIENCY WHERE STUDENTID = @STUDENTID  
END  
GO

IF EXISTS(SELECT TOP 1 1 FROM SYS.PROCEDURES WHERE NAME='SP_GETSTUDENTINFO' AND TYPE='P')
DROP PROCEDURE SP_GETSTUDENTINFO
GO 
CREATE PROC SP_GETSTUDENTINFO
AS BEGIN
	SELECT STUDENTID,NAME,DATEOFBIRTH,UNIVERSITYCOURSE,STARTDATE,ENDDATE,WELSHLANGUAGEPROFICIENCY,RETIREMENTDATE FROM TSTUDENTS WHERE RETIREMENTDATE IS NULL

END
GO

IF EXISTS(SELECT TOP 1 1 FROM sys.procedures WHERE name='SP_GetStudentById' AND type='P')
DROP PROCEDURE SP_GetStudentById
GO 
CREATE PROC SP_GetStudentById (@Studentid bigint)
AS BEGIN
SELECT * FROM TSTUDENTS WHERE studentid=@Studentid
END
GO

IF EXISTS(SELECT TOP 1 1 FROM SYS.PROCEDURES WHERE NAME='SP_DELETESTUDENT' AND TYPE='P')
DROP PROCEDURE SP_DELETESTUDENT
GO 
CREATE PROC SP_DELETESTUDENT (@STUDENTID BIGINT)
AS
BEGIN
UPDATE TSTUDENTS SET RETIREMENTDATE=GETDATE() WHERE STUDENTID=@STUDENTID
END
GO